===== Cycle 1 =====

Pipeline Stages:
  IF:
    Instruction: addi $t1, $zero, 1
    pc: 4
  ID:
    Instruction: addi $t0, $zero, 0
  EX:
    Instruction: {}
    RS: {} = {}
    RT: {} = {}
    control: {'is_nop': True}
  MEM:
    Instruction: {}
    control: {'is_nop': True}
    alu_result: {}
  WB:
    Instruction: {}
    control: {'is_nop': True}
    dest_reg: {}

Registers:
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
==============================
===== Cycle 2 =====

Pipeline Stages:
  IF:
    Instruction: addi $t2, $zero, 10
    pc: 8
  ID:
    Instruction: addi $t1, $zero, 1
  EX:
    Instruction: addi $t0, $zero, 0
    RS: $zero = 0
    RT: {} = None
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
  MEM:
    Instruction: {}
    control: {'is_nop': True}
    alu_result: {}
  WB:
    Instruction: {}
    control: {'is_nop': True}
    dest_reg: {}

Registers:
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
==============================
===== Cycle 3 =====

Pipeline Stages:
  IF:
    Instruction: add $t0, $t0, $t1
    pc: 12
  ID:
    Instruction: addi $t2, $zero, 10
  EX:
    Instruction: addi $t1, $zero, 1
    RS: $zero = 0
    RT: {} = None
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
  MEM:
    Instruction: addi $t0, $zero, 0
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    alu_result: 0
  WB:
    Instruction: {}
    control: {'is_nop': True}
    dest_reg: {}

Registers:
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
==============================
===== Cycle 4 =====

Pipeline Stages:
  IF:
    Instruction: addi $t1, $t1, 1
    pc: 16
  ID:
    Instruction: add $t0, $t0, $t1
  EX:
    Instruction: addi $t2, $zero, 10
    RS: $zero = 0
    RT: {} = None
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
  MEM:
    Instruction: addi $t1, $zero, 1
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    alu_result: 1
  WB:
    Instruction: addi $t0, $zero, 0
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    dest_reg: $t0

Registers:
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
==============================
===== Cycle 5 =====

Pipeline Stages:
  IF:
    Instruction: sub $t3, $t2, $t1
    pc: 20
  ID:
    Instruction: addi $t1, $t1, 1
  EX:
    Instruction: add $t0, $t0, $t1
    RS: $t0 = 0
    RT: $t1 = 0
    control: {'opcode': 'add', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
  MEM:
    Instruction: addi $t2, $zero, 10
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    alu_result: 10
  WB:
    Instruction: addi $t1, $zero, 1
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    dest_reg: $t1

Registers:
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
==============================
===== Cycle 6 =====

Pipeline Stages:
  IF:
    Instruction: or $t3, $t3, $zero
    pc: 24
  ID:
    Instruction: sub $t3, $t2, $t1
  EX:
    Instruction: addi $t1, $t1, 1
    RS: $t1 = 1
    RT: $t1 = None
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
  MEM:
    Instruction: add $t0, $t0, $t1
    control: {'opcode': 'add', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    alu_result: 1
  WB:
    Instruction: addi $t2, $zero, 10
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    dest_reg: $t2

Registers:
  $t1: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
==============================
===== Cycle 7 =====

Pipeline Stages:
  IF:
    Instruction: addi $t4, $zero, 4096
    pc: 28
  ID:
    Instruction: or $t3, $t3, $zero
  EX:
    Instruction: sub $t3, $t2, $t1
    RS: $t2 = 10
    RT: $t1 = 1
    control: {'opcode': 'sub', 'alu_op': 'SUB', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
  MEM:
    Instruction: addi $t1, $t1, 1
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    alu_result: 2
  WB:
    Instruction: add $t0, $t0, $t1
    control: {'opcode': 'add', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    dest_reg: $t0

Registers:
  $t1: 1
  $t2: 10
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
==============================
===== Cycle 8 =====

Pipeline Stages:
  IF:
    Instruction: sw $t0, 0($t4)
    pc: 32
  ID:
    Instruction: addi $t4, $zero, 4096
  EX:
    Instruction: or $t3, $t3, $zero
    RS: $t3 = 0
    RT: $zero = 0
    control: {'opcode': 'or', 'alu_op': 'OR', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
  MEM:
    Instruction: sub $t3, $t2, $t1
    control: {'opcode': 'sub', 'alu_op': 'SUB', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    alu_result: 8
  WB:
    Instruction: addi $t1, $t1, 1
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    dest_reg: $t1

Registers:
  $t0: 1
  $t1: 1
  $t2: 10
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
==============================
===== Cycle 9 =====

Pipeline Stages:
  IF:
    Instruction: lw $t5, 0($t4)
    pc: 36
  ID:
    Instruction: sw $t0, 0($t4)
  EX:
    Instruction: addi $t4, $zero, 4096
    RS: $zero = 0
    RT: $zero = None
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
  MEM:
    Instruction: or $t3, $t3, $zero
    control: {'opcode': 'or', 'alu_op': 'OR', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    alu_result: 8
  WB:
    Instruction: sub $t3, $t2, $t1
    control: {'opcode': 'sub', 'alu_op': 'SUB', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    dest_reg: $t3

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
==============================
===== Cycle 10 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 40
  ID:
    Instruction: lw $t5, 0($t4)
  EX:
    Instruction: sw $t0, 0($t4)
    RS: $t4 = 0
    RT: $t0 = 1
    control: {'opcode': 'sw', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': True, 'reg_write': False, 'mem_to_reg': False, 'is_nop': False}
  MEM:
    Instruction: addi $t4, $zero, 4096
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: or $t3, $t3, $zero
    control: {'opcode': 'or', 'alu_op': 'OR', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    dest_reg: $t3

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
==============================
===== Cycle 11 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: sw $t0, 0($t4)
    control: {'opcode': 'sw', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': True, 'reg_write': False, 'mem_to_reg': False, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: addi $t4, $zero, 4096
    control: {'opcode': 'addi', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': False, 'reg_write': True, 'mem_to_reg': False, 'is_nop': False}
    dest_reg: $t4

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
==============================
===== Cycle 12 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: sw $t0, 0($t4)
    control: {'opcode': 'sw', 'alu_op': 'ADD', 'mem_read': False, 'mem_write': True, 'reg_write': False, 'mem_to_reg': False, 'is_nop': False}
    dest_reg: $t0

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 13 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 14 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 15 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 16 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 17 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 18 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 19 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 20 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 21 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 22 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 23 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 24 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 25 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 26 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 27 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 28 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 29 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 30 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 31 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 32 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 33 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 34 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 35 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 36 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 37 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 38 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 39 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 40 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 41 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 42 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 43 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 44 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 45 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 46 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 47 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 48 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 49 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 50 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 51 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 52 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 53 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 54 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 55 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 56 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 57 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 58 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 59 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 60 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 61 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 62 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 63 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 64 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 65 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 66 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 67 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 68 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 69 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 70 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 71 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 72 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 73 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 74 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 75 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 76 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 77 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 78 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 79 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 80 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 81 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 82 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 83 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 84 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 85 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 86 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 87 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 88 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 89 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 90 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 91 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 92 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 93 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 94 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 95 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 96 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 97 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 98 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 99 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 100 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 101 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 102 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 103 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 104 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 105 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 106 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 107 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 108 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 109 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 110 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 111 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 112 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 113 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 114 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 115 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 116 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 117 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 118 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 119 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 120 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 121 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 122 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 123 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 124 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 125 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 126 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 127 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 128 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 129 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 130 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 131 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 132 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 133 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 134 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 135 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 136 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 137 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 138 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 139 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 140 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 141 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 142 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 143 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 144 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 145 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 146 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 147 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 148 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 149 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 150 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 151 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 152 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 153 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 154 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 155 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 156 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 157 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 158 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 159 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 160 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 161 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 162 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 163 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 164 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 165 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 166 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 167 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 168 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 169 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 170 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 171 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 172 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 173 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 174 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 175 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 176 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 177 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 178 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 179 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 180 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 181 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 182 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 183 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 184 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 185 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 186 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 187 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 188 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 189 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 190 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 191 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 192 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 193 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 194 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 195 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 196 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 197 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 198 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 199 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 200 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 201 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 202 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 203 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 204 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 205 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 206 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 207 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 208 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 209 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 210 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 211 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 212 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 213 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 214 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 215 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 216 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 217 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 218 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 219 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 220 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 221 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 222 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 223 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 224 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 225 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 226 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 227 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 228 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 229 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 230 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 231 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 232 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 233 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 234 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 235 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 236 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 237 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 238 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 239 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 240 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 241 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 242 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 243 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 244 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 245 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 246 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 247 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 248 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 249 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 250 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 251 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 252 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 253 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 254 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 255 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 256 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 257 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 258 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 259 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 260 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 261 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 262 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 263 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 264 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 265 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 266 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 267 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 268 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 269 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 270 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 271 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 272 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 273 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 274 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 275 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 276 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 277 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 278 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 279 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 280 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 281 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 282 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 283 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 284 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 285 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 286 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 287 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 288 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 289 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 290 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 291 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 292 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 293 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 294 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 295 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 296 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 297 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 298 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 299 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 300 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 301 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 302 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 303 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 304 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 305 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 306 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 307 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 308 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 309 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 310 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 311 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 312 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 313 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 314 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 315 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 316 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 317 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 318 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 319 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 320 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 321 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 322 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 323 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 324 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 325 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 326 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 327 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 328 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 329 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 330 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 331 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 332 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 333 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 334 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 335 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 336 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 337 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 338 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 339 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 340 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 341 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 342 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 343 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 344 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 345 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 346 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 347 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 348 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 349 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 350 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 351 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 352 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 353 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 354 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 355 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 356 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 357 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 358 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 359 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 360 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 361 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 362 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 363 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 364 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 365 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 366 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 367 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 368 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 369 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 370 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 371 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 372 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 373 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 374 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 375 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 376 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 377 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 378 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 379 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 380 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 381 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 382 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 383 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 384 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 385 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 386 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 387 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 388 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 389 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 390 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 391 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 392 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 393 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 394 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 395 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 396 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 397 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 398 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 399 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 400 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 401 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 402 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 403 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 404 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 405 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 406 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 407 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 408 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 409 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 410 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 411 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 412 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 413 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 414 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 415 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 416 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 417 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 418 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 419 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 420 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 421 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 422 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 423 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 424 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 425 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 426 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 427 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 428 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 429 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 430 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 431 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 432 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 433 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 434 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 435 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 436 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 437 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 438 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 439 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 440 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 441 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 442 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 443 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 444 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 445 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 446 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 447 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 448 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 449 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 450 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 451 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 452 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 453 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 454 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 455 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 456 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 457 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 458 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 459 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 460 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 461 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 462 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 463 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 464 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 465 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 466 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 467 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 468 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 469 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 470 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 471 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 472 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 473 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 474 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 475 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 476 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 477 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 478 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 479 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 480 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 481 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 482 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 483 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 484 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 485 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 486 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 487 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 488 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 489 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 490 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 491 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 492 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 493 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 494 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 495 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 496 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 497 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 498 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 499 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 500 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 501 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 502 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 503 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 504 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 505 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 506 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 507 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 508 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 509 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 510 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 511 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 512 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 513 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 514 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 515 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 516 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 517 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 518 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 519 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 520 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 521 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 522 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 523 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 524 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 525 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 526 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 527 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 528 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 529 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 530 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 531 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 532 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 533 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 534 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 535 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 536 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 537 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 538 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 539 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 540 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 541 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 542 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 543 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 544 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 545 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 546 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 547 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 548 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 549 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 550 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 551 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 552 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 553 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 554 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 555 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 556 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 557 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 558 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 559 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 560 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 561 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 562 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 563 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 564 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 565 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 566 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 567 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 568 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 569 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 570 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 571 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 572 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 573 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 574 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 575 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 576 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 577 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 578 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 579 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 580 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 581 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 582 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 583 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 584 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 585 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 586 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 587 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 588 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 589 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 590 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 591 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 592 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 593 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 594 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 595 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 596 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 597 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 598 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 599 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 600 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 601 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 602 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 603 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 604 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 605 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 606 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 607 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 608 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 609 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 610 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 611 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 612 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 613 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 614 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 615 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 616 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 617 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 618 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 619 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 620 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 621 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 622 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 623 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 624 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 625 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 626 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 627 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 628 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 629 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 630 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 631 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 632 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 633 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 634 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 635 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 636 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 637 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 638 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 639 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 640 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 641 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 642 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 643 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 644 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 645 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 646 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 647 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 648 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 649 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 650 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 651 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 652 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 653 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 654 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 655 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 656 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 657 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 658 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 659 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 660 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 661 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 662 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 663 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 664 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 665 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 666 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 667 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 668 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 669 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 670 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 671 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 672 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 673 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 674 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 675 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 676 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 677 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 678 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 679 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 680 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 681 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 682 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 683 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 684 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 685 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 686 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 687 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 688 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 689 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 690 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 691 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 692 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 693 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 694 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 695 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 696 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 697 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 698 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 699 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 700 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 701 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 702 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 703 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 704 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 705 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 706 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 707 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 708 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 709 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 710 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 711 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 712 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 713 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 714 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 715 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 716 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 717 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 718 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 719 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 720 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 721 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 722 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 723 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 724 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 725 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 726 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 727 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 728 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 729 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 730 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 731 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 732 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 733 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 734 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 735 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 736 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 737 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 738 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 739 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 740 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 741 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 742 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 743 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 744 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 745 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 746 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 747 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 748 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 749 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 750 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 751 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 752 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 753 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 754 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 755 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 756 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 757 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 758 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 759 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 760 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 761 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 762 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 763 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 764 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 765 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 766 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 767 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 768 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 769 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 770 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 771 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 772 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 773 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 774 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 775 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 776 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 777 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 778 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 779 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 780 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 781 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 782 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 783 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 784 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 785 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 786 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 787 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 788 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 789 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 790 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 791 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 792 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 793 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 794 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 795 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 796 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 797 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 798 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 799 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 800 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 801 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 802 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 803 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 804 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 805 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 806 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 807 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 808 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 809 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 810 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 811 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 812 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 813 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 814 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 815 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 816 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 817 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 818 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 819 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 820 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 821 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 822 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 823 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 824 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 825 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 826 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 827 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 828 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 829 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 830 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 831 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 832 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 833 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 834 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 835 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 836 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 837 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 838 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 839 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 840 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 841 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 842 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 843 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 844 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 845 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 846 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 847 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 848 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 849 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 850 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 851 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 852 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 853 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 854 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 855 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 856 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 857 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 858 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 859 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 860 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 861 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 862 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 863 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 864 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 865 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 866 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 867 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 868 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 869 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 870 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 871 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 872 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 873 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 874 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 875 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 876 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 877 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 878 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 879 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 880 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 881 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 882 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 883 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 884 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 885 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 886 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 887 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 888 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 889 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 890 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 891 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 892 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 893 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 894 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 895 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 896 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 897 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 898 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 899 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 900 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 901 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 902 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 903 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 904 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 905 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 906 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 907 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 908 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 909 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 910 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 911 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 912 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 913 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 914 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 915 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 916 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 917 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 918 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 919 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 920 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 921 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 922 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 923 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 924 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 925 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 926 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 927 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 928 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 929 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 930 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 931 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 932 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 933 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 934 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 935 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 936 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 937 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 938 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 939 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 940 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 941 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 942 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 943 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 944 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 945 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 946 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 947 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 948 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 949 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 950 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 951 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 952 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 953 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 954 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 955 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 956 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 957 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 958 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 959 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 960 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 961 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 962 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 963 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 964 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 965 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 966 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 967 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 968 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 969 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 970 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 971 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 972 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 973 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 974 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 975 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 976 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 977 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 978 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 979 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 980 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 981 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 982 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 983 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 984 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 985 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 986 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 987 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 988 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 989 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 990 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 991 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 992 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 993 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 994 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 995 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 996 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 997 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 998 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 999 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================
===== Cycle 1000 =====

Pipeline Stages:
  IF:
    Instruction: 0
    pc: 44
  ID:
    Instruction: 0
  EX:
    Instruction: lw $t5, 0($t4)
    RS: $t4 = 0
    RT: $t5 = 0
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
  MEM:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    alu_result: 4096
  WB:
    Instruction: lw $t5, 0($t4)
    control: {'opcode': 'lw', 'alu_op': 'ADD', 'mem_read': True, 'mem_write': False, 'reg_write': True, 'mem_to_reg': True, 'is_nop': False}
    dest_reg: $t5

Registers:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Memory:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
==============================

===== Summary (1000 cycles) =====

Final Register State:
  $t0: 1
  $t1: 2
  $t2: 10
  $t3: 8
  $t4: 4096
  $t5: 1
  $sp: 16383

Final Memory State:
  TEXT SEGMENT:
    TEXT[0x0]: addi $t0, $zero, 0
    TEXT[0x4]: addi $t1, $zero, 1
    TEXT[0x8]: addi $t2, $zero, 10
    TEXT[0xc]: add $t0, $t0, $t1
    TEXT[0x10]: addi $t1, $t1, 1
    TEXT[0x14]: sub $t3, $t2, $t1
    TEXT[0x18]: or $t3, $t3, $zero
    TEXT[0x1c]: addi $t4, $zero, 4096
    TEXT[0x20]: sw $t0, 0($t4)
    TEXT[0x24]: lw $t5, 0($t4)
  STATIC SEGMENT:
    STATIC[0x1000]: 1
